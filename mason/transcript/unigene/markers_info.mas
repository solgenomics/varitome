<%doc>

=head1 NAME 
 
 marker_info.mas
 Mason component to create html with marker data

=cut

=head1 VERSION 

0.1

=cut 

=head1 SYNOPSIS

<& '/transcript/unigene/marker_info.mas', dbh => $dbh, unigene => $unigene  &>


where: $dbh, a dbi connection object
       $unigene, an CXGN::Transcript::Unigene object
       
       
=cut


=head1 DESCRIPTION

 Mason component to create html with markers data.

=cut
 
=head 1 AUTHOR
 
 Aureliano Bombarely (ab782@cornell.edu)

=cut  

</%doc>


<%args>
$dbh
$unigene
</%args>

<%perl>

use strict;
use warnings;

use CXGN::Marker;

use CXGN::Page::FormattingHelpers  qw/ info_section_html info_table_html columnar_table_html page_title_html html_break_string /;

my $markers_content;

## Get the object
my $id =  $unigene->get_unigene_id();

## The markers section are divided into two sections: 
##   1- General markers information
##   2- COSII (Conserved Ortholog Set II) marker information 


if (defined $id) {

   ## First get the map information using the unigene object

   my @mapped;
   my @mapped_member_ids = $unigene->get_mapped_members();
   
   ## Define a count variable
   my $markers_count = 0;
    
   foreach my $map (@mapped_member_ids) { 
       my $marker = CXGN::Marker->new($dbh, $map->{marker_id});
       my $marker_name = 'Unknown';   ## Use unknown by default
       if($marker) {
          $marker_name = $marker->name_that_marker();
       }
    
       my $est_link = qq |<a href="/search/est.pl?request_id=$map->{clone_id}&request_from=1&request_type=8">SGN-C$map->{clone_id}</a>|;
       my $marker_link = qq|<a href="/search/markers/markerinfo.pl?marker_id=$map->{marker_id}">$marker_name</a>|;
       push @mapped, [ $est_link, $marker_link];
       $markers_count++;
   }

   ## Second, put the data into a table to show in the web

   my $mapped_html;
   if (defined $mapped[0]) {
       $mapped_html = columnar_table_html( headings => [ 'EST', 'Marker' ], data     => \@mapped );
   } else {
       $mapped_html = qq|<span class="ghosted">No member sequence or clone is mapped.</span>|;
   }
 
   my $map_content = info_table_html( 'Unigene Mapped Marker Information'   => $mapped_html,
                                       __border               => 0,
                                       );

   

   ## Third, take the COSII marker data
   
   my $cosii_data_html;
 
   my @cosii_data = $unigene->get_cosii_info();
   foreach my $cosii_marker (@cosii_data) { 
       my ($marker_id, $marker_name)= @{$cosii_marker};
       my $cosii_link = '<a href=/search/markers/markerinfo.pl?marker_id=' . $marker_id . '>' . $marker_name . '</a>';
       $cosii_data_html .= "COSII marker $cosii_link was created with this unigene.<br />\n";
       $markers_count++;
   }
   unless (defined $cosii_data[0]) {
       $cosii_data_html .= qq|<span class="ghosted">None cosii markers associated to this unigene.</span>|;
   }
 
   my $cosii_info_link = '<a href="/markers/cosii_markers.pl">COSII Markers</a>';
   my $cosii_content = info_table_html( "$cosii_info_link Information" => $cosii_data_html,
					__border                       => 0,
                                      );
   
   $map_content .= $cosii_content;
  
   $markers_content = info_section_html( title        => "Markers Information (".$markers_count.")", 
                                         contents     => $map_content,
					 collapsible  => 1,
                                         collapsed    => 1 
                                       );
}



</%perl>

<% $markers_content %>
