<%doc>

=head1 NAME

 basic_sample_info.mas
 mason component to take basic sample data from the database and return it as html

=head1 DESCRIPTION

 A mason component to take basic sample data from the database and return it as html

</%doc>

<%args>
  $schema
  $sample
</%args>

<%perl>
use strict;
use warnings;

use CXGN::People::Person;

my $default_message = '<span class="ghosted">not recorded</span>';

my $sample_name = $sample->get_sample_name();
    my $alt_name = $sample->get_alternative_name() || $default_message;
    my $type_id = $sample->get_type_id();
    my $description = $sample->get_description() || $default_message;
    my $contact_id = $sample->get_contact_id();
    my $organism_id = $sample->get_organism_id();
    my $stock_id = $sample->get_stock_id();
    my $protocol_id = $sample->get_protocol_id();

    ## Now it will take the data for each id

    ## Type_id

    my $type_name_html = $default_message;
    if (defined $type_id) {

	my ($type_cvterm_row) = $schema->resultset('Cv::Cvterm')
	                               ->search({ cvterm_id => $type_id });

	if (defined $type_cvterm_row) {

	    $type_name_html = $type_cvterm_row->get_column('name');
	}
    }

    ## Organism_id

    my $organism_html = $default_message;
    my ($organism_row) = $schema->resultset('Organism::Organism')
	                        ->search( { organism_id => $organism_id } );

    if (defined $organism_row) {
	my $genus = $organism_row->get_column('genus');
	my $species = $organism_row->get_column('species');
	my $organism_link = '/chado/organism.pl?organism_id='.$organism_id;
	$organism_html = "<a href=$organism_link>$species</a><br>";
    }


    ## Same thing with protocol (it haven't any web yet)

    my $protocol_html = $default_message;
    my ($protocol_row) = $schema->resultset('BsProtocol')
	                        ->search( { protocol_id => $protocol_id } );

    if (defined $protocol_row) {
	my $protocol_name = $protocol_row->get_column('protocol_name');
	## my $protocol_link = '/biosource/protocol.pl?protocol_id='.$protocol_id;
	## $protocol_html = "<a href=$protocol_link>$protocol_name</a><br>";
	$protocol_html = $protocol_name;
    }

    ## Contact_id

    my $contact_html = $default_message;

    my $contact = CXGN::People::Person->new($schema->storage()->dbh(), $contact_id);

    if (defined $contact) {

	my $saludation = $contact->get_salutation();
	my $first_name = $contact->get_first_name();
	my $last_name = $contact->get_last_name();

	my $contact_link = '/solpeople/personal-info.pl?sp_person_id=' . $contact_id;
	$contact_html = "<a href=$contact_link>$saludation $first_name $last_name</a><br>";
    }

    ## For now, there are not any stock information to show. It should be complete with
    ## Nat. div. module in some point


    my (@onto_html);
    my (@external_links_html);
    my %dbxref_related = $sample->get_dbxref_related();

    foreach my $dbxref_id (sort keys %dbxref_related) {

	## Get the sample_element_dbxref (GO and PO terms) (with cvterm.name)
	## Get external accessions (without cvterm.name)

	if (defined $dbxref_related{$dbxref_id} ) {

	     my %dbxref_rel_data = %{ $dbxref_related{$dbxref_id} };

	     if (defined $dbxref_rel_data{'cvterm.name'}) {

		 my $onto_accession = $dbxref_rel_data{'db.name'} . ":" . $dbxref_rel_data{'dbxref.accession'};
		 my $onto_descr = $dbxref_rel_data{'cvterm.name'};
		 my $onto_link = '/cvterm/'.$dbxref_rel_data{'cvterm.cvterm_id'}.'/view';
		 my $onto_line = "<a href=$onto_link>$onto_accession</a> ($onto_descr)<br>";
		 push @onto_html, $onto_line;
	     }
	     else {
		 my $external_accession = $dbxref_rel_data{'db.name'} . ": " . $dbxref_rel_data{'dbxref.accession'};
                 if( $dbxref_rel_data{'db.urlprefix'} &&  $dbxref_rel_data{'db.url'} ) {
                     my $external_link = $dbxref_rel_data{'db.urlprefix'} . $dbxref_rel_data{'db.url'} . $dbxref_rel_data{'dbxref.accession'};
                     my $external_line = "<a href=$external_link>$external_accession</a><br>";
                     push @external_links_html, $external_line;
                 } else {
                     push @external_links_html, $external_accession;
                 }
	     }
	 }
    }

    my $ontologies_list = join(' ', @onto_html) || $default_message;
    my $external_links_list = join(' ', @external_links_html) || $default_message;

</%perl>

<&| /page/info_section.mas, title => 'Data source' &>

    <& /page/info_table.mas, multicol => 4, data => [
            'Name' => $sample_name,
            'Alternative name' => $alt_name,
            'Type' => $type_name_html,
            'Protocol' => $protocol_html,
            'Organism' => $organism_html,
            'Contact' => $contact_html,
    ]&>

    <& /page/info_table.mas, data => [
            'Description' => $description,
    ]&>
    <& /page/info_table.mas, data => [
            'Ontology terms' => $ontologies_list,
            'External links' => $external_links_list,
    ]&>

</&>
