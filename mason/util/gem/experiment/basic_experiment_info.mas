<%doc>

=head1 NAME 
 
 basic_experiment_info.mas
 Mason component to show the basic information for experimental design web page.

=cut

=head1 VERSION 

0.1

=cut 

=head1 DESCRIPTION

 Mason component to show the basic information for experiment web page.

 - Mason root page = experiment_detail.mas
 - Perl controller = experiment.pl

 The use of CXGN::People::Person require of dbi connection not linked 
 with the schema object


=cut
 
=head 1 AUTHOR
 
 Aureliano Bombarely (ab782@cornell.edu)

=cut 

</%doc>


<%args>
$dbh
$experiment
</%args>


<%perl>
use strict;
use warnings;

use CXGN::GEM::Schema;
use CXGN::Chado::Dbxref;
use CXGN::GEM::Hybridization;
use CXGN::People::Person;
use CXGN::Page::FormattingHelpers  qw/ info_section_html info_table_html columnar_table_html page_title_html html_break_string /;

my $basic_info_content;
my $exp_accession;

my $default_message = '<i><font color="gray">data not available</font></i>';

## If there aren't any experiment_row that comes from experimental_design_detail.mas, it will return a message.

if (defined $experiment->get_experiment_id()) {

   ## Get the schema object
   my $schema = $experiment->get_schema();   
   
   my $experiment_name = $experiment->get_experiment_name();
   $exp_accession = $experiment_name;

   my $replicates_nr = $experiment->get_replicates_nr();
   my $colour_nr = $experiment->get_colour_nr();
   my $description = $experiment->get_description();

   ## Get the data for experimental design and targets

   my $expdesign = $experiment->get_experimental_design();
   my $expdesign_id = $expdesign->get_experimental_design_id();   
   my $expdesign_name = $expdesign->get_experimental_design_name();
   my $expdesign_link = '/gem/experimental_design.pl?id='.$expdesign_id;
   my $expdesign_html = "<a href=$expdesign_link>$expdesign_name</a>";

   ## Get the external links

    my @exp_dbxref_list_id = $experiment->get_dbxref_list();
    my @exp_dbxref_html_list = ();

    foreach my $exp_dbxref_id (@exp_dbxref_list_id) {
        my ($exp_dbxref_row) = $schema->resultset('General::Dbxref')
                                      ->search({ dbxref_id => $exp_dbxref_id });

        if (defined $exp_dbxref_row) {
            my ($exp_db_row) = $schema->resultset('General::Db')
                                      ->search({ db_id => $exp_dbxref_row->get_column('db_id') });
            
            my $exp_dbxref_link = $exp_db_row->get_column('urlprefix') . 
		                  $exp_db_row->get_column('url') . 
				  $exp_dbxref_row->get_column('accession');

            my $exp_dbxref_html = $exp_db_row->get_column('name') . 
                                  ": <a href=$exp_dbxref_link>" . 
				  $exp_dbxref_row->get_column('accession')."</a>";

            push @exp_dbxref_html_list, $exp_dbxref_html;
        }
    }
    
    my $exp_dbxref_html_list = join('<br>', @exp_dbxref_html_list) || $default_message;

   ## Get the sample_element_dbxref (GO and PO terms)       
   ## It remove the redundancy using a hash
	
   my %onto_html;
   my %external_links_html;

   my @target_html_list;
   my @target_list = $experiment->get_target_list();
   foreach my $target (@target_list) {
       my $target_id = $target->get_target_id();
       my $target_name = $target->get_target_name();
       my $target_link = '/gem/target.pl?id='.$target_id;
       my $target_html = "<a href=$target_link>$target_name</a>";
       push @target_html_list, $target_html;

       ## It will take the ontology list too

       my %target_elements = $target->get_target_elements();
       
       foreach my $target_el_name (sort keys %target_elements) {
	   my %target_el_data = %{ $target_elements{$target_el_name} };
	   my $sample_id = $target_el_data{'sample_id'};
	   my $sample = CXGN::Biosource::Sample->new($schema, $sample_id);

	   my %dbxref_related = $sample->get_dbxref_related();
	   
	   foreach my $dbxref_id (keys %dbxref_related) {

	       if (defined $dbxref_related{$dbxref_id} ) {
	 
		   my %dbxref_rel_data = %{ $dbxref_related{$dbxref_id} };

		   if (defined $dbxref_rel_data{'cvterm.name'}) {
	
		       my $onto_accession = $dbxref_rel_data{'db.name'} . ":" . $dbxref_rel_data{'dbxref.accession'};
		       my $onto_descr = $dbxref_rel_data{'cvterm.name'};
		       my $onto_link = '/cvterm/'.$dbxref_rel_data{'cvterm.cvterm_id'}.'/view';
		       my $onto_line = "<a href=$onto_link>$onto_accession</a> ($onto_descr)<br>";
		       unless (defined $onto_html{$onto_line}) {
			   $onto_html{$onto_line} = 1;
		       }
		   }
		   else {
		       my $external_accession = $dbxref_rel_data{'db.name'} . ": " . $dbxref_rel_data{'dbxref.accession'};
		       my $external_link = $dbxref_rel_data{'db.urlprefix'} . $dbxref_rel_data{'db.url'} . $dbxref_rel_data{'dbxref.accession'};
		       my $external_line = "<a href=$external_link>$external_accession</a><br>";
		       unless (defined $external_links_html{$external_line}) {
			   $external_links_html{$external_line} = 1;
		       }
		   }
	       }
	   }
       }
   }
   

   
   
   my $onto_list = join(' ', sort keys %onto_html) || $default_message;

   ## It will not print the dbxref links for a sample
   ## my $external_links_list = join(' ', keys %external_links_html) || $default_message;

   my $target_html_list = join('<br>', @target_html_list) || $default_message;
   
   ## Get information of the contact
   my $person_id = $experiment->get_contact_id();
   my ($complete_name, $contact_email);
   if (defined $person_id) {

       my $person = CXGN::People::Person->new($dbh, $person_id);
      
       my $salutation = $person->get_salutation() || 'Dr.';
       my $first_name = $person->get_first_name();
       my $last_name = $person->get_last_name();
       $contact_email = $person->get_contact_email || $default_message;
       if (defined $salutation && defined $first_name && defined $last_name) {
	   $complete_name = "$salutation $first_name $last_name";
       } else {
	   $complete_name = $default_message;
       }
   } else {
      $complete_name = $default_message;
      $contact_email = $default_message;
   }
   
   ## Create the HTML table

   $basic_info_content = <<HTML;

   <table width="100%">
   	   <tr> <td width="25%"> <b>Experiment name:</b>           </td> <td> $experiment_name </td></tr>
           <tr> <td width="25%"> <b>Description:</b>               </td> <td> $description </td></tr>
	   <tr>	<td width="25%"> <b>Colours:</b>                   </td> <td> $colour_nr </td></tr>
           <tr>	<td width="25%"> <b>Replicates:</b>                </td> <td> $replicates_nr </td></tr>
	   <tr> <td width="25%"> <b>Experiment external links:</b> </td> <td> $exp_dbxref_html_list </td></tr>
	   <tr> <td width="25%"> <b>Experimental design:</b>       </td> <td> $expdesign_html </td></tr>
	   <tr> <td width="25%"> <b>Targets:</b>                   </td> <td> $target_html_list </td></tr>
	   <tr> <td width="25%"> <b>Ontologies:</b>                </td> <td> $onto_list </td></tr>
	   <tr> <td width="25%"> <b>Contact info:</b>              </td> <td> <b>Name:</b> $complete_name </td></tr>
           <tr> <td width="">                                      </td> <td> <b>E-mail:</b> $contact_email </td></tr>
   </table>

HTML

} else {
   $basic_info_content = "<h1>No experiment data for the specified parameters.</h1>";
}   

my $basic_info_html;
if (defined $exp_accession) {
   $basic_info_html = "<center><big><b>Expression Experiment: $exp_accession</b></big></center><br>";
}

$basic_info_html .= info_section_html( title => "Experiment Basic Information", contents => $basic_info_content );

</%perl>

<% $basic_info_html %>

<& 
   /util/import_javascript.mas, 
   classes => 'CXGN.Effects' 
&>
